# require python2-powerline-git

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix `
bind-key ` send-prefix

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set tofocused pane by mouse 
# setw -g mode-mouse on
# set-option -g mouse-select-pane on

# Set title
set-option -g set-titles on
set-option -g set-titles-string '#S.#I.#P #W #T' # window number,program name, active(or not)

# Set status bar
set -g status-bg cyan
#set-option -g status-utf8 on
#set -g status-bg black
#set -g status-fg green
#set -g status-left-length 19
#set -g status-left '#S'
#set -g status-right '| #[fg=yellow]%y-%m-%d %H:%M '
#set -g status-justify centre
#setw -g window-status-current-format '#[fg=yellow](#I.#P#F#T:#W)#[default]'
#setw -g window-status-format '#I#F#T'

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
set-window-option -g window-status-current-bg red

# vi mode
set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection


# Keybindings
bind-key r source-file ~/.tmux.conf
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
bind-key | split-window -h
bind-key - split-window -v
